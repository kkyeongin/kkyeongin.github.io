{"componentChunkName":"component---src-templates-blog-post-js","path":"/SICP/how-to-summarize-procedure/","result":{"data":{"site":{"siteMetadata":{"title":"In Progress","author":"Kyeongin","siteUrl":"http://kkyeongin.github.io","comment":{"disqusShortName":"kkyeongin.github.io","utterances":"kkyeongin/kkyeongin.github.io"},"sponsor":{"buyMeACoffeeId":"QRsTu4dlJ"}}},"markdownRemark":{"id":"67ed0ea6-42dd-5c44-ae9a-5e90f17da7a4","excerpt":"프로시저를 써서 요약하는 방법 목차 프로그램을 짤 때 바탕이 되는 것 Procedure vs Process higher-order procedure로 요약하는 방법 프로그램 짤 때 바탕이 되는 것 좋은 프로그래밍은 내 생각을 짜임새 깊게 나타내는 것이다.\n그 중 가장 기본이 되는 것이 아래 3개 이다. primitive expression means of combination means of abstracion 좋은 프로그래밍 언어에는 primitive data & primitive…","html":"<h1 id=\"프로시저를-써서-요약하는-방법\"><a href=\"#%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EB%A5%BC-%EC%8D%A8%EC%84%9C-%EC%9A%94%EC%95%BD%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"프로시저를 써서 요약하는 방법 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로시저를 써서 요약하는 방법</h1>\n<ul>\n<li>\n<p>목차</p>\n<ol>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EC%A7%A4-%EB%95%8C-%EB%B0%94%ED%83%95%EC%9D%B4-%EB%90%98%EB%8A%94-%EA%B2%83\">프로그램을 짤 때 바탕이 되는 것</a></li>\n<li><a href=\"#Procedure-vs-Process\">Procedure vs Process</a></li>\n<li><a href=\"#higher-order-procedure%EB%A1%9C-%EC%9A%94%EC%95%BD%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\">higher-order procedure로 요약하는 방법</a></li>\n</ol>\n</li>\n</ul>\n<h2 id=\"프로그램-짤-때-바탕이-되는-것\"><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EC%A7%A4-%EB%95%8C-%EB%B0%94%ED%83%95%EC%9D%B4-%EB%90%98%EB%8A%94-%EA%B2%83\" aria-label=\"프로그램 짤 때 바탕이 되는 것 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로그램 짤 때 바탕이 되는 것</h2>\n<p>좋은 프로그래밍은 내 생각을 짜임새 깊게 나타내는 것이다.\n그 중 가장 기본이 되는 것이 아래 3개 이다.</p>\n<ul>\n<li>primitive expression</li>\n<li>means of combination</li>\n<li>means of abstracion</li>\n</ul>\n<p>좋은 프로그래밍 언어에는 primitive data &#x26; primitive procedure를 나타내고, 잘 조합하여, 추상화 시켜야 한다.</p>\n<h2 id=\"procedure-vs-process\"><a href=\"#procedure-vs-process\" aria-label=\"procedure vs process permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Procedure vs Process</h2>\n<blockquote>\n<p>프로시저란, 한 컴퓨터 프로세스가 어떻게 나아가는지(local evolution of a computer process), 곧 지난일을 발판 삼아 다음으로 해야 할 일을 밝힌 것이다.</p>\n</blockquote>\n<h3 id=\"how-do-we-create-expressions-using-these-precedures\"><a href=\"#how-do-we-create-expressions-using-these-precedures\" aria-label=\"how do we create expressions using these precedures permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How do we create expressions using these precedures?</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">||</span>  <span class=\"token operator\">|</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">||</span>  <span class=\"token operator\">|</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">||</span>  <span class=\"token operator\">|</span> <span class=\"token operator\">|</span>___ close parenthesis\n<span class=\"token operator\">||</span>  <span class=\"token operator\">|</span>___ other expressions\n<span class=\"token operator\">||</span>____ an expression whose value is a procedure\n<span class=\"token operator\">|</span>____ open parenthesis\n  </code></pre></div>\n<ul>\n<li>\n<p>What about the semantics of a combination?</p>\n<p>sub-expression을 평가하고, 첫 번째 표현식의 값을 다른 표현식의 값에 적용합니다.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>\n<p>위와 같은 복합식(combination expression)은 어떻게 계산 해야 하나?</p>\n<p>위에서 (+ 2 3)식을 풀었고 같은 패턴의 복합식이므로 같은 방법으로 처리하면 된다.\n이걸 보통 recursive(재귀) 프로세스 라고 한다.</p>\n</li>\n</ul>\n<h3 id=\"abstraction\"><a href=\"#abstraction\" aria-label=\"abstraction permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>abstraction</h3>\n<ol>\n<li>\n<p>식에 이름 부여</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">define score <span class=\"token number\">23</span></code></pre></div>\n</li>\n<li>special form</li>\n</ol>\n<p>for, while 반목문 같은 경우 special form(특별한 형태)를 가진다.\n위에서 (+ 2 3)식을 풀었고 같은 패턴의 복합식이므로 같은 방법으로 처리하면 된다.\n이걸 보통 recursive(재귀) 프로세스 라고 한다.</p>\n<p>프로시저란, 한 컴퓨터 프로세스가 어떻게 나아가는지(local evolution of a computer process), 곧 지난일을 발판 삼아 다음으로 해야 할 일을 밝힌 것이다. </p>\n<h2 id=\"higher-order-procedure로-요약하는-방법\"><a href=\"#higher-order-procedure%EB%A1%9C-%EC%9A%94%EC%95%BD%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"higher order procedure로 요약하는 방법 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>higher-order procedure로 요약하는 방법</h2>\n<ul>\n<li>어떻게 추상화를 잘 하는 방법</li>\n<li>식에 이름을 정하는 것</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">define score <span class=\"token number\">23</span></code></pre></div>\n<ol start=\"2\">\n<li>special form</li>\n</ol>","frontmatter":{"title":"How to Summarize Procedure","date":"February 19, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/SICP/how-to-summarize-procedure/","previous":{"fields":{"slug":"/DevOps/git-page-+-gastby-+-jenkins를-활용하여-blog-만들기 copy/"},"frontmatter":{"title":"Git Page+Docker+Jenkins(2)","category":"DevOps"}},"next":{"fields":{"slug":"/Design-Patterns/singleton-pattern/"},"frontmatter":{"title":"Singleton Pattern","category":"Design-Patterns"}}}}}